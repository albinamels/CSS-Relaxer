@import url('https://fonts.googleapis.com/css2?family=Montserrat&display=swap');

* {
  box-sizing: border-box;
}

body {
  font-family: 'Montserrat', sans-serif;
  background: #224941 url("./img/bg.jpg") no-repeat center center/cover; 
  /* #224941 added in case if url won't work */
  min-height: 100vh;
  overflow: hidden;
  /* overflow: hidden removes scroll-bar on right */
  display: flex;
  flex-direction: column;
  align-items: center;
  color: white;
}

.container {
  /* background-color: red; */
  display: flex;
  justify-content: center;
  align-items: center;
  margin: auto;
  height: 300px;
  width: 300px;
  position: relative;
  /* all the elements will be absolute positioned relatively to container */
  transform: scale(1);
  /* to control the size of elements inside, set default scale(1), 1=100% */
}

.circle {
  background-color: #00121E;
  height: 100%;
  width: 100%;
  position: absolute;
  /* relatively to .container */
  top: 0;
  left: 0;
  /* 0 to fit container absolutely */
  border-radius: 50%;
  z-index: -1;
  /* to put inner circle behind the <p>Breath In</p> */
}

.gradient-circle {
  /* conic-gradient() creates pie-chart */
  background: conic-gradient(
    #55b7a4 0%,
    #4ca493 40%,
    /* this color starts on 12am, ends on 5pm */
    #fff 40%,
    #fff 60%,
    #336d62 60%,
    #2a5b52 100%
  );
  height: 320px;
  width: 320px;
  /* size should be on 20px more than inner circle */
  border-radius: 50%;
  position: absolute;
  /* relatively to .container */
  top: -10px;
  left: -10px;
  /* 10px above the inner circle on top-right-bottom-left */
  z-index: -2;
  /* to put gradient-circle behind the inner circle */
}

/* container for timer */
.text-container {
  text-align: center;
}

.pointer {
  display: block;
  /* since span is inline element, make it block element to control w&h */
  width: 20px;
  height: 20px;
  background-color: white;
  border-radius: 50%;
}

.pointer-container {
  /* background-color: blue; */
  position: absolute;
  /* relatively to .container */
  top: -40px;
  /* 40px above the .container=> 10.gradient + 10gap + 20.pointer height */
  left: 140px;
  /* 140left + 20width + 140right = 300.container width */
  width: 20px;
  height: 190px;
  /* 150.half-container + 10.gradient + 10gap + 20.pointer height */
  animation: rotate 7.5s linear forwards infinite;
  /* name | duration | timing-function | fill-mode | non stop */
  /* timing-function linear - animates at an even speed */
  /* fill-mode forwards - start on the same spot */
  transform-origin: bottom center;
  /* define where should be the base origin / fulcrum tochka opori */
}

@keyframes rotate {
  from{
    transform: rotate(0deg);
    /* initial state - 12am */
  } 
  to {
    transform: rotate(360deg);
    /* done on full circle */
  }
}

/* 
total cycle -> animation: rotate 7.5s
breath in -> animation: grow 3s
breath out -> animation: shrink 3s
hold -> 1.5s
*/


/* this class will be added dynamicly to .container via js */
.grow {
  animation: grow 3s linear forwards;
}

@keyframes grow {
  from {
    transform: scale(1);
    /* start on default scale 100% line 30 */
  } 
  to {
    transform: scale(1.2);
    /* stop growing at 120%  */
  }
}

/* this class will be added dynamicly to .container via js */
.shrink {
  animation: shrink 3s linear forwards;
}

@keyframes shrink {
  from {
    transform: scale(1.2);
    /* start on 120% when growing stops */
  } 
  to {
    transform: scale(1);
    /* stop at default scale 100% */
  }
}